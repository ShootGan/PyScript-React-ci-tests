on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          path: ./pyscript-react
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "lts/*"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: yarn --ignore-engines
        working-directory: ./pyscript-react
      # - name: Run tests
      #   run: yarn run test

      - name: Build project
        run: |
              ls
              echo "--------------------------------------------"
              yarn run build
        working-directory: ./pyscript-react

      - name: Create zip lib
        uses: vimtor/action-zip@v1
        with:
          files: library/
          dest: pyscript-react.zip

      - name: Get current tag
        run: |
          ls
          echo "current_tag=v`grep version package.json | sed 's/.*"version": "\(.*\)".*/\1/'`" >> $GITHUB_ENV
          ls
      - name: Create new tag
        uses: rickstaa/action-create-tag@v1
        id: "tag_create"
        with:
          tag: "${{ env.current_tag }}"
          tag_exists_error: true
          message: "Latest release"

      - name: Create GitHub realese
        uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{ env.current_tag }}"
          prerelease: false
          files: |
            LICENSE
            pyscript-react.zip

      - name: Publish to npm ðŸš€
        run: |
          cd library
          echo "--------------------------------------------"
          ls
          echo "--------------------------------------------"
          cd ..
          for dir in library/*; do
            if [ -d "$dir" ]; then
              cd "$dir"
              echo "--------------------------------------------"
              echo "$dir"
              ls
              echo "--------------------------------------------"
              cd ../../
            fi
          done
        # env:
        #   NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
